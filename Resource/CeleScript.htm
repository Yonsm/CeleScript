<HTML>

<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=gb2312">
<TITLE>CeleScript 使用说明</TITLE>
<STYLE>
H5
{
	padding: 3px;
	font-size: 13px;
	color: #000099;
	background-color: #EEEEEE;
	border:#E6E6E6 1px solid;
	border-left: 4px solid #669900;
	border-bottom: #DBDBDB 1px solid;
}
B
{
	color: #334466;
}
</STYLE>
</HEAD>

<BODY STYLE="font-size: 12px">

<H4 ALIGN="center"><A NAME="Catalog"></A></A>CeleScript 使用说明</H4>
<P ALIGN="center"><FONT COLOR="#FF0000">注意：此帮助文件未经仔细校对，可能有部分命令解释有误。若有谬错之处，敬请指正。</FONT></P>
<P ALIGN="center">[<A HREF="#Introduction">简介</A>] [<A HREF="#Feature">特点</A>] [<A HREF="#Installation">安装</A>] 
[<A HREF="#Usage">使用</A>] [<A HREF="#Menu">菜单</A>] [<A HREF="#Command">命令</A>] [<A HREF="#Tips">问答</A>] 
[<A HREF="#License">许可</A>] [<A HREF="#Donation">致谢</A>]</P>
<H5><A NAME="Introduction"></A>一、简介</H5>
<OL>
	欢迎使用功能强大、灵活方便的 CeleScript 命令解释引擎。您只要编写简单的 CeleScript 命令文件，就能在 Windows 中实现灵活强大的批处理功能。</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Feature"></A>二、特点</H5>
<OL>
	<LI><B>性能高效</B>：命令解释引擎精巧构思，短小精干，运行迅速。<BR>
	　</LI>
	<LI><B>功能强大</B>：内置支持多种命令，使用这些命令可以编写出功能强大的批处理脚本。<BR>
	　</LI>
	<LI><B>扩展支持</B>：支持调用外部 EXE 和 DLL 函数。<BR>
	　</LI>
	<LI><B>使用灵活</B>：支持格式统一的命令行参数和命令文件，可以在命令行、命令文件和程序界面中，调用 CeleScript 的各种功能。<BR>
	　</LI>
	<LI><B>其它功能</B>：支持导入标准的和扩展的 Windows 注册表脚本脚本。<BR>
	　</LI>
	<LI><B>方便调试</B>：在程序界面中执行命令或命令文件，可以在日志窗口中跟踪脚本执行的流程和结果，方面发现命令脚本的问题。<BR>
	　</LI>
	<LI><B>广泛支持</B>：一个可执行文件，同时支持 Windows 2000/XP/2003/Vista，并且适用于 Windows XPE 
	中作为登录解释脚本引擎。<BR>
	　</LI>
	<LI><B>源码公开</B>：源代码公开，方便更改定制和功能增强，且在源代码中增加扩展命令支持非常容易。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Installation"></A>三、安装</H5>
<OL>
	<LI><B>安装</B>：绿色软件，直接运行 CeleScript.exe 即可使用。如果要关联 .csc 命令文件，可以在在程序中双击 
	CeleScript 的图标。<BR>
	　</LI>
	<LI><B>卸载</B>：CeleScript 是“绿色”软件，删除 CeleScript.exe 即可卸载。如果选择了关联 .csc 
	命令文件，请在程序中再次双击 CeleScript 的图标取消文件关联。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Usage"></A>四、使用</H5>
<OL>
	<LI><B>使用方式</B><BR>
	　<UL>
		<LI>直接执行本程序，将显示允许输入命令和现实执行结果的对话框，您可以直接在程序界面上执行各种操作。<BR>
		　</LI>
		<LI>在命令行参数中使用，例如，要创建快捷方式，执行“CeleScript.exe LINK %M\程序\测试程序.lnk,%W\Test.exe”即可。<BR>
		　</LI>
		<LI>在命令文件中使用，例如，“CeleScript.exe LOAD C:\Test\*.csc”。<BR>
		　</LI>
		<LI>如果省略命令关键字，将自动判断参数，且支持通配符和子目录递归查找匹配文件（前导“!”）。如 CeleScript.exe %C\*.csc。CeleScript 将按以下规则解析执行：<BR><BR>
		<UL>
		<LI>.inf：安装 INF 文件。</LI>
		<LI>.csc、.reg：执行 CeleScript 的 LOAD 命令。</LI>
		<LI>.dll、.ocx、.ax：执行 CeleScript 的 CDLL 命令。</LI>
		<LI>.exe、.com、bat、cmd：运行可执行文件和批处理文件。</LI>
		</UL><BR>
		</LI>
	</UL>
	</LI>
	<LI><B>命令格式</B><UL><BR>
		<LI>CeleScript 的命令是一行字符串，以大写的四字符关键字开始，紧跟着的是空格或制表符，后面是命令的参数。<BR>
		　</LI>
		<LI>参数之间用逗号“,”分隔，如果在参数中要使用逗号本身，则需要使用“%,”的转义字符。<BR>
		　</LI>
		<LI>不同的命令的参数格式不一致，详细请参考 <A HREF="#Command">命令</A>。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><B>变量与宏</B><BR>
	<BR>
	CeleScript 读取一条个命令文件后，首先展开其中用“%”号前导的宏：<BR>
	　<UL>
		<LI>E&nbsp;&nbsp;&nbsp; 当前脚本的完整路径</LI>
		<LI>C&nbsp;&nbsp;&nbsp; 当前脚本的目录</LI>
		<LI>T&nbsp;&nbsp;&nbsp; 当前时间</LI>
		<LI>D&nbsp;&nbsp;&nbsp; 当前日期</LI>
		<LI>X&nbsp;&nbsp;&nbsp; 最后一条命令的返回值，十六进制格式，如 0XFFFFFFFF</LI>
		<LI>x&nbsp;&nbsp;&nbsp; 最后一条命令的返回值，十进制格式，如 -1 </LI>
		<LI>0-9&nbsp; 用户变量值，用户可以通过 EVAL 命令设置变量 0 到 9 的内容</LI>

		<LI>W&nbsp;&nbsp;&nbsp; CSIDL_WINDOWS</LI>
		<LI>A&nbsp;&nbsp;&nbsp; CSIDL_APPDATA</LI>
		<LI>Y&nbsp;&nbsp;&nbsp; CSIDL_MYDOCUMENTS</LI>
		<LI>S&nbsp;&nbsp;&nbsp; CSIDL_STARTUP</LI>
		<LI>M&nbsp;&nbsp;&nbsp; CSIDL_STARTMENU</LI>
		<LI>P&nbsp;&nbsp;&nbsp; CSIDL_PROGRAMS</LI>
		<LI>V&nbsp;&nbsp;&nbsp; CSIDL_FAVORITES</LI>
		<LI>Z&nbsp;&nbsp;&nbsp; CSIDL_MYPICTURES</LI>
		<LI>U&nbsp;&nbsp;&nbsp; CSIDL_MYMUSIC</LI>
		<LI>I&nbsp;&nbsp;&nbsp; CSIDL_MYVIDEO</LI>
		<LI>F&nbsp;&nbsp;&nbsp; CSIDL_PROGRAM_FILES</LI>
		<LI>O&nbsp;&nbsp;&nbsp; CSIDL_SENDTO</LI>
		<LI>o&nbsp;&nbsp;&nbsp; CSIDL_DESKTOPDIRECTORY</LI>

		<LI>d&nbsp;&nbsp;&nbsp; CSIDL_COMMON_DESKTOPDIRECTORY</LI>
		<LI>a&nbsp;&nbsp;&nbsp; CSIDL_COMMON_APPDATA</LI>
		<LI>y&nbsp;&nbsp;&nbsp; CSIDL_COMMON_DOCUMENTS</LI>
		<LI>s&nbsp;&nbsp;&nbsp; CSIDL_COMMON_STARTUP</LI>
		<LI>m&nbsp;&nbsp;&nbsp; CSIDL_COMMON_STARTMENU</LI>
		<LI>p&nbsp;&nbsp;&nbsp; CSIDL_COMMON_PROGRAMS</LI>
		<LI>v&nbsp;&nbsp;&nbsp; CSIDL_COMMON_FAVORITES</LI>
		<LI>z&nbsp;&nbsp;&nbsp; CSIDL_COMMON_PICTURES</LI>
		<LI>u&nbsp;&nbsp;&nbsp; CSIDL_COMMON_MUSIC</LI>
		<LI>i&nbsp;&nbsp;&nbsp; CSIDL_COMMON_VIDEO</LI>
		<LI>f&nbsp;&nbsp;&nbsp; CSIDL_PROGRAM_FILES_COMMON</LI>
	
		<LI>R&nbsp;&nbsp;&nbsp; 回车字符</LI>
		<LI>N&nbsp;&nbsp;&nbsp; 换行字符</LI>
		<LI>#&nbsp;&nbsp;&nbsp; 十六进制字符，后面紧跟这四个十六进制字符，如“%#FEFF”</LI>
		<LI>%&nbsp;&nbsp;&nbsp; 由于“%”用于宏转义，如果需要在参数中确实需要使用“%”本身，则需要用两个“%”代替，如“%1”要写成“%%1”。</LI>
		<LI>,&nbsp;&nbsp;&nbsp; CeleScript 把“,”作为参数分隔符，与“%”类似，如果在参数中需要使用“,”本身，则需要使用“%,”的形式。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><B>命令文件</B><BR>
	<BR>
	CeleScript 的命令文件是由 CeleScript 命令组成的命令集合。<BR>
	　<UL>
		<LI>每条命令单独一行。</LI>
		<LI>命令文件中可以使用注释，注释必须单独一行，以“;”作为注释行开始。</LI>
		<LI>命令文件支持 UNICODE 格式和 ASCII 格式，为了更高的执行效率，推荐使用 UNICODE 格式。</LI>
		<LI>命令文件中可以杂合 Windows Registry Script 内容，CeleScript 会把 Registry Script 
		导入到注册表。但是使用这种方式必须十分小心，因为执行过程中，Registry Script 部分会被修改（仅在内存中），可能导致 CALL 和 
		GOTO 无法正常使用（使用原则：最新会被执行到的 Registry Script 放在文件最后的子过程中，这样就能避免问题）。</LI>
	</UL>
	</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Menu"></A>五、界面</H5>
<OL>
	<LI><B>执行</B>：执行命令。<BR>
	　</LI>
	<LI><B>关于</B>：显示程序版本、版权和作者信息。<BR>
	　</LI>
	<LI><B>退出</B>：退出 CeleScript 程序。<BR>
	　</LI>
	<LI><B>清除日志</B>：单击 CeleScript 图标。<BR>
	　</LI>
	<LI><B>文件关联</B>：双击 CeleScript 图标。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Command"></A>六、命令</H5>
<OL>
	<P ALIGN="center">
	[<A HREF="#LOAD">LOAD</A>] [<A HREF="#BATC">BATC</A>] [<A HREF="#IFEX">IFEX</A>] [<A HREF="#ELSE">ELSE</A>] 
	[<A HREF="#CALL">CALL</A>] [<A HREF="#GOTO">GOTO</A>] [<A HREF="#PROC">PROC</A>] [<A HREF="#ENDP">ENDP</A>] 
	[<A HREF="#PLAY">PLAY</A>] [<A HREF="#BEEP">BEEP</A>] [<A HREF="#MSGX">MSGX</A>] [<A HREF="#DLGX">DLGX</A>] 
	[<A HREF="#LINK">LINK</A>] [<A HREF="#FILE">FILE</A>] [<A HREF="#REGX">REGX</A>] [<A HREF="#ENVI">ENVI</A>] 
	[<A HREF="#SEND">SEND</A>] [<A HREF="#WAIT">WAIT</A>] [<A HREF="#KILL">KILL</A>] [<A HREF="#SHUT">SHUT</A>] 
	[<A HREF="#EXEC">EXEC</A>] [<A HREF="#CDLL">CDLL</A>] [<A HREF="#EVAL">EVAL</A>] [<A HREF="#ASOC">ASOC</A>] 
	[<A HREF="#CCUI">CCUI</A>]</P>
	<LI><A NAME="LOAD"></A><FONT COLOR="#C0C0C0">[</FONT><B>LOAD</B>
	<FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">文件路径</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：LOAD script file/加载并解释命令脚本文件或注册表脚本文件。<BR>
		　</LI>
		<LI><B>参数</B>：指定命令文件的路径。<BR>
		　</LI>
		<LI><B>示例</B>：LOAD \ABC.csc<BR>
		　</LI>
		<LI><B>备注</B>：</LI><BR>
		<BR>
		<UL>
			<LI>如果需要支持通配符和递归查找，请省略此关键字。</LI>
			<LI>此命令可以执行 CeleScript 命令脚本或导入注册表脚本。</LI>
			<LI>注册表脚本文件中，最后一行不会被处理，建议最后留一个空行。<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	　</LI>
	<LI><A NAME="BATC"></A><B>BATC</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">命令1</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">;命令2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">;命令3</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">...</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：BATch Command/一次执行多个命令。<BR>
		　</LI>
		<LI><B>参数</B>：命令列表，用分号分割。<BR>
		　</LI>
		<LI><B>示例</B>：BATC BEEP;MSGX Hello%, World!<BR>
		　</LI>
		<LI><B>备注</B>：由于分号被用作分隔符，用此命令执行的子命令中，将无法使用“;”字符。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="IFEX"></A><B>IFEX</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">!</FONT><FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">条件</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">,命令</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：IF condition is true, EXecute command/根据条件是否成立，决定是否执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定条件和命令。前导“!”表示条件不成立才执行。如果不存在下列条件判断符，则把条件当作文件路径，判断文件或目录是否存在。<BR>
		<BR>
		<B>=</B>：字符串匹配，忽略大小写<BR>
		<BR>
		<B>!</B>：字符串不匹配，忽略大小写<BR>
		<BR>
		<B>==</B>：数值相等<BR>
		<BR>
		<B>!=</B>：数值不相等<BR>
		<BR>
		<B>&gt;</B>：数值大于<BR>
		<BR>
		<B>&gt;=</B>：数值大于或等于<BR>
		<BR>
		<B>&lt;</B>：数值小于<BR>
		<BR>
		<B>&lt;=</B>：数值小于或等于<BR>
		<BR>
		<B>&amp;</B>：位 AND 运算<BR>
		<BR>
		<B>&amp;&amp;</B>：逻辑 AND 运算<BR>
		<BR>
		<B>|</B>：位 OR 运算<BR>
		<BR>
		<B>||</B>：逻辑 OR 运算<BR>
		　</LI>
		<LI><B>示例</B>：IFEX %x&amp;0x08,BATC BEEP;MSGX Sure!<BR>
		　</LI>
		<LI><B>备注</B>：本命令不修改返回值（即，您可以连续判断“%x”并执行相应的操作）。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="ELSE"></A><B>ELSE</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">命令</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：ELSE condition command/如果最近的 IFEX 条件不成立，则执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定命令。<BR>
		　</LI>
		<LI><B>示例</B>：ELSE MSGX Error!<BR>
		　</LI>
		<LI><B>备注</B>：本命令不修改返回值。基于此点，DLGX 后可以连续用此命令判断 %x 的值，而不用担心会被 IFEX 后面的命令修改返回值。<BR>
		　</LI>
	</UL>
	</LI>	
	<LI><A NAME="CALL"></A><B>CALL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：CALL procedure/调用子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。该子程序必须位于此命令之后。<BR>
		　</LI>
		<LI><B>示例</B>：CALL _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="GOTO"></A><B>GOTO</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：GOTO procedure/转到子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。该子程序必须位于此命令之后。<BR>
		　</LI>
		<LI><B>示例</B>：GOTO _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="PROC"></A><B>PROC</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：PROCedure/定义子程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。<BR>
		　</LI>
		<LI><B>示例</B>：PROC _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="ENDP"></A><B>ENDP</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">子程序名</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：END of Procedure/子程序结束。<BR>
		　</LI>
		<LI><B>参数</B>：指定子程序名称。<BR>
		　</LI>
		<LI><B>示例</B>：ENDP _DiableSTK<BR>
		　</LI>
		<LI><B>备注</B>：此命令只能在命令文件中使用，不能在命令行参数中使用。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="PLAY"></A><B>PLAY</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">!</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">*</FONT><FONT COLOR="#C0C0C0">]&lt;</FONT><FONT COLOR="#0000FF">声音文件路径</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：PLAY sound/播放声音。<BR>
		　</LI>
		<LI><B>参数</B>：指定声音文件路径，仅支持 WAV 格式。<BR>
		　</LI>
		<LI><B>示例</B>：PLAY \Windows\Alarm1.wav<BR>
		　</LI>
		<LI><B>备注</B>：前导“!”表示后台播放；前导“$”表示系统声音别名；前导“*”表示循环播放。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="BEEP"></A><B>BEEP</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：BEEP/鸣叫。<BR>
		　</LI>
		<LI><B>参数</B>：指定鸣叫声音类型（数值），具体意义与 Windows Mobile SDK 中 MessageBeep 相同，请查阅相关文档或实际尝试。<BR>
		　</LI>
		<LI><B>示例</B>：BEEP<BR>
		　</LI>
		<LI><B>备注</B>：无。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="MSGX"></A><B>MSGX</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">消息文本</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,标题</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：MesSaGe boX/显示消息框。<BR>
		　</LI>
		<LI><B>参数</B>：指定消息文本，消息框标题（默认为本程序的名称），以及消息框类型（默认为 0x40）。<BR>
		　</LI>
		<LI><B>示例</B>：MSGX 禁用 STK 服务将导致一卡双号功能不能使用。%N%N确实要禁止 STK 服务吗?,禁止 STK 服务,0x24<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>消息框类型与 Windows Mobile SDK 中 MessageBox 意义相同，为以下两组数值的组合：<BR>
			<BR>
			0x00 OK&nbsp; <BR>
			0x01 OK/CANCEL <BR>
			0x02 ABORT/RETRY/IGNORE <BR>
			0x03 YES/NO/CANCEL <BR>
			0x04 YES/NO <BR>
			0x05 RETRY/CANCEL<BR>
			<BR>
			0x10 ERROR <BR>
			0x20 QUESTION <BR>
			0x30 WARNING <BR>
			0x40 INFORMATION <BR>
			<BR>
			</LI>
			<LI>本命令返回值如下：<BR>
			<BR>
			0x01 OK<BR>
			0x02 CANCEL<BR>
			0x03 ABORT<BR>
			0x04 RETRY<BR>
			0x05 IGNORE<BR>
			0x06 YES<BR>
			0x07 NO</LI>
		</UL>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="DLGX"></A><B>DLGX</B> <FONT COLOR="#C0C0C0">[[</FONT><FONT COLOR="#008000">[选中]</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">{选中}</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">&lt;选中&gt;</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">文本1</FONT><FONT COLOR="#C0C0C0">][[</FONT><FONT COLOR="#008000">[选中]</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">{选中}</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">&lt;选中&gt;</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">$</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">文本2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">...</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：DiaLoG boX/显示对话框。<BR>
		　</LI>
		<LI><B>参数</B>：定义对话框中的控件文字；初始值表示复选框和单选框的初始状态，最低位为 1 表示第一个对话框控件选中，依此类推。<BR>
		　</LI>
		<LI><B>示例</B>：DLGX $请选择要执行的操作,$,{1}安装梅花输入法,&lt;0&gt;安装中天 A4 输入法,$,[1]开启 STK 服务,$,$设置字符串:,%0<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>前导“[]”表示复选框；前导“&lt;&gt;”表示单选框；前导“{}”表示分组单选框；前导“$”表示提示文字；如果没有前导符且是第一项，设置对话框标题，否则表示编辑框。</LI>
			<LI>如果用户点击确定，将返回所有控件选中状态的组合（即，如果第一个控件被选中，则返回值的最低位为 1，依此类推）。只有复选框和单选框能被选中，但其它控件也计入选中状态组合。</LI>
			<LI>如果用户点击确定，第一个编辑框的结果将保存在 %0 中，第二个编辑框的结果将保存在 %1 中，依此类推。</LI>
			<LI>如果用户点击取消，将返回 -1；<BR>
			<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	</LI>
	<LI><A NAME="LINK"></A><B>LINK</B> <FONT COLOR="#DBDBDB">[</FONT><FONT COLOR="#008000">*</FONT><FONT COLOR="#DBDBDB">][</FONT><FONT COLOR="#008000">!</FONT><FONT COLOR="#DBDBDB">]</FONT><FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">快捷方式路径</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">,目标路径</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,运行参数</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,图标路径</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,图标索引</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：LINK shortcut to target/创建快捷方式。<BR>
		　</LI>
		<LI><B>参数</B>：<BR>
		<BR>
		<B>快捷方式路径</B>：指定要生成的快捷方式的路径，可以不需要“.LNK”扩展名。<BR>
		<BR>
		<B>目标路径</B>：指定快捷方式的目标文件或目录。<BR>
		<BR>
		<B>运行参数</B>：目标程序运行参数。<BR>
		<BR>
		<B>图标路径</B>：快捷方式图标的路径。<BR>
		<BR>
		<B>图标索引</B>：快捷方式图标的在文件资源中的标识。图表索引是该图标在所有图标中的顺序；或者用“-”前导，紧跟着图标的资源标识，如“-100”。<BR>
		　</LI>
		<LI><B>示例</B>：LINK %S\电话,%W\CProg.exe,,ShellRes.dll,1024<BR>
		　</LI>
		<LI><B>备注</B>：
		前导“!”表示以最小化方式启动程序，可用于执行批处理文件时最小化命令窗口。前导“*”不检查目标是否有效，如果同时使用“!”，“*”必须在“!”之前。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="FILE"></A><B>FILE</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">文件路径</FONT><FONT COLOR="#C0C0C0">&gt;[&lt;</FONT><FONT COLOR="#0000FF">操作符</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">目标</FONT><FONT COLOR="#C0C0C0">]]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：FILE or directory operation/创建、复制、移动、删除文件或目录。<BR>
		　</LI>
		<LI><B>参数</B>：指定源文件路径和目标路径，支持通配符。如果有没有以下操作符存在，则表示删除文件；否则，表示以下操作：<BR>
		<BR>
		<B>-&gt;</B>：移动文件或目录<BR>
		<BR>
		<B>=&gt;</B>：复制文件或目录<BR>
		<BR>
		<B>&lt;-</B>：创建文件，并把目标数据以 ASCII 方式写入到文件中<BR>
		<BR>
		<B>&lt;=</B>：创建文件，并把目标数据以 ASCII 方式追加到文件中<BR>
		<BR>
		<B>{-</B>：创建文件，并把目标数据以 UNICODE 方式写入到文件中<BR>
		<BR>
		<B>{=</B>：创建文件，并把目标数据以 UNICODE 方式追加到文件中<BR>
		　</LI>
		<LI><B>示例</B>：FILE \Temp\*.txt<BR>
		　</LI>
		<LI><B>备注</B>：在创建文件功能中，无法写入空字符（即“%#0000”）。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="REGX"></A><B>REGX</B> <FONT COLOR="#C0C0C0">&lt;&lt;</FONT><FONT COLOR="#0000FF">根项</FONT><FONT COLOR="#C0C0C0">&gt;&lt;</FONT><FONT COLOR="#0000FF">\子项\</FONT><FONT COLOR="#C0C0C0">&gt;[[</FONT><FONT COLOR="#008000">-</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">@</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">键值</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">=数据</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：REGistry eXecution/读取、设置、删除注册表数据。<BR>
		　</LI>
		<LI><B>参数</B>：<BR>
		<BR>
		<B>注册表脚本路径</B>：导入指定的注册表脚本到系统注册表中，支持通配符，例如“REGX %c\*.REG”。 如果前导“!”表示不显示提示对话框。<BR>
		<BR>
		<B>子项</B>：所选 ROOTKEY 下注册表项的完整名，可以是 HKU、HKCU、HKCR、HKLM 或 HKEY_USERS、HKEY_CURRENT_USER、HKEY_CLASSES_ROOT、HKEY_LOCAL_MACHINE。<BR>
		<BR>
		<B>键值</B>：要操作的键值。如果前导“#”则表示 REG_DWORD 整数类型的数据，如“#0x20”；如果前导“@”则为 REG_BINARY，如“@23 
		34 90 255”；否则为字符串。<BR>
		<BR>
		<B>数据</B>：要设置的数据。如果没有“=”则表示获取数据，并保存在 %0 中。如果前导“-”，且数据中没有“=”则删除值或子项。<BR>
		　</LI>
		<LI><B>示例</B>：REGX HKCR\CeleScript\#Test=%x<BR>
		　</LI>
		<LI><B>备注</B>：此命令描述比较复杂，请耐心理解。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="ENVI"></A><B>ENVI</B> <FONT COLOR="#C0C0C0">[[</FONT><FONT COLOR="#008000">#$</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">名称</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">=值</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：ENVIronment/设置或清除环境变量。<BR>
		　</LI>
		<LI><B>参数</B>：指定环境变量名称和值。前导“$”表示设置系统级环境变量，否则仅设置本程序内部使用的环境变量。如果不指定值，则删除环境变量。如果不指定名称和值，则设置以下环境变量：<BR>
		Favorites 收藏夹目录<BR>
		Desktop 桌面目录<BR>
		StartMenu 开始菜单目录<BR>
		Startup 启动菜单目录<BR>
		Programs 程序菜单目录<BR>
		SendTo 发送到目录<BR>
		Personal 我的文档目录<BR>
		QuickLaunch 快速启动目录<BR>　</LI>
		<LI><B>示例</B>：ENVI $<BR>
		　</LI>
		<LI><B>备注</B>：如果使用“EXEC”执行的程序，会自动继承本程序的话境变量，换句话说，如果在命令文件中设置不带“$”的“ENVI”环境变量，对后面的“EXEC”程序中也会有效。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="SEND"></A><B>SEND</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">按键代码1</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">_</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">^</FONT><FONT COLOR="#C0C0C0">]&gt;[</FONT><FONT COLOR="#008000">,按键代码2</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">_</FONT><FONT COLOR="#C0C0C0">|</FONT><FONT COLOR="#008000">^</FONT><FONT COLOR="#C0C0C0">]][...]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：SEND key input/模拟按键。<BR>
		　</LI>
		<LI><B>参数</B>：虚拟按键代码，如 VK_NUMLOCK，请参相关考编程文档。如果按键代码以“_”结束，则仅模拟按键按下；“^”则仅模拟按键弹起；否则模拟按下并弹起。很生动吧：）<BR>
		　</LI>
		<LI><B>示例</B>：SEND 0x12_,0x09_,0x09^,0x12^<BR>
		　</LI>
		<LI><B>备注</B>：上面的示例模拟 Alt+Tab。按键代码支持 16 进制，如“SEND 0x90”表示按下 NumLock 键。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="WAIT"></A><B>WAIT</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">时间</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：WAIT to continue/等待指定时间后再继续执行命令。<BR>
		　</LI>
		<LI><B>参数</B>：指定时间，单位为毫秒。<BR>
		　</LI>
		<LI><B>示例</B>：WAIT 2000<BR>
		　</LI>
		<LI><B>备注</B>：无。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="KILL"></A><B>KILL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">进程名称</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：KILL process/强制终止指定的进程。<BR>
		　</LI>
		<LI><B>参数</B>：进程名称，即 EXE 文件名（不包含目录）。<BR>
		　</LI>
		<LI><B>示例</B>：KILL CProg<BR>
		　</LI>
		<LI><B>备注</B>：此命令将终止与“进程名称”前部分匹配的所有进程，所以如果省略参数，可能将全部进程关闭。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="SHUT"></A><B>SHUT</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">R</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：SHUT down or reboot/关闭或重起设备。<BR>
		　</LI>
		<LI><B>参数</B>：R 表示重新启动，默认为关机。<BR>
		　</LI>
		<LI><B>示例</B>：SHUT<BR>
		　</LI>
		<LI><B>备注</B>：在 XPE 中使用将直接关机，可能导致未保存的数据丢失。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="EXEC"></A><B>EXEC</B> <FONT COLOR="#C0C0C0">[=]</FONT><FONT COLOR="#0000FF">&lt;EXE 
	命令行</FONT><FONT COLOR="#C0C0C0">&gt;</FONT><BR>
	　<UL>
		<LI><B>功能</B>：EXECute a program/执行 EXE 程序。<BR>
		　</LI>
		<LI><B>参数</B>：指定 EXE 路径和参数。<BR>
		　</LI>
		<LI><B>示例</B>：EXEC %W\System32\NET.exe START "ESET Service"<BR>
		　</LI>
		<LI><B>备注</B>：<BR><BR>前导“!”表示隐藏窗口。<BR>前导“@”表示在另外的控制台中执行，用于 XPE 后台登陆。<BR>前导“=”表示等待执行完成。<BR>前导“&”表示写入到自动运行的注册表项中执行。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="CDLL"></A><B>CDLL</B> <FONT COLOR="#C0C0C0">&lt;</FONT><FONT COLOR="#0000FF">DLL 
	路径</FONT><FONT COLOR="#C0C0C0">&gt;[</FONT><FONT COLOR="#008000">,函数名称</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数1</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数2</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数3</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">,</FONT><FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#008000">#</FONT><FONT COLOR="#C0C0C0">]</FONT><FONT COLOR="#008000">参数4</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：Call DLL function/调用 DLL 函数。<BR>
		　</LI>
		<LI><B>参数</B>：指定 DLL 路径、函数名称和参数。如果省略函数名称，将调用“DllRegisterServer”。参数默认为 UNICODE 
		字符串，如果以“#”前导则表示整数；最多支持四个函数参数。<BR>
		　</LI>
		<LI><B>示例</B>：CALL SHELL32.DLL,DllInstall,#1,I<BR>
		　</LI>
		<LI><B>备注</B>：函数必须以 STDCALL 方式导出（不明白什么意思的话，就当没任何问题）。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="EVAL"></A><B>EVAL</B> <FONT COLOR="#C0C0C0">[</FONT><FONT COLOR="#0000FF">变量名</FONT><FONT COLOR="#C0C0C0">][</FONT><FONT COLOR="#008000">=字符串</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：EVALuate variable/给变量赋值。<BR>
		　</LI>
		<LI><B>参数</B>：指定变量名称（0-9、x、X），以及要赋值的字符串。<BR>
		　</LI>
		<LI><B>示例</B>：EVAL 0=My Variable<BR>
		　</LI>
		<LI><B>备注</B>：　</LI><BR>
		<BR>
		<UL>
			<LI>如果省略变量名称，则清空所有变量。</LI>
			<LI>如果没有等号字符，将返回该变量的数值形式。<BR>
			<BR>
			</LI>
		</UL>
		</LI>
	</UL>
	</LI>	
	<LI><A NAME="ASOC"></A><B>ASOC</B> <FONT COLOR="#C0C0C0">[!][</FONT><FONT COLOR="#008000">文件类型</FONT><FONT COLOR="#C0C0C0">]</FONT><BR>
	　<UL>
		<LI><B>功能</B>：ASOC file type/显示帮助信息。<BR>
		　</LI>
		<LI><B>参数</B>：指定要关联的文件类型，如果不指定，表示“CeleScript”类型。前导“!”表示删除文件关联。<BR>
		　</LI>
		<LI><B>示例</B>：ASOC .reg<BR>
		　</LI>
		<LI><B>备注</B>：可以关联的文件类型有：.csc/.reg。<BR>
		　</LI>
	</UL>
	</LI>
	<LI><A NAME="CCUI"></A><B>CCUI</B><BR>
	　<UL>
		<LI><B>功能</B>：CeleCommmand UI/显示 CeleScript 程序主界面。<BR>
		　</LI>
		<LI><B>参数</B>：无。<BR>
		　</LI>
		<LI><B>示例</B>：CCUI<BR>
		　</LI>
		<LI><B>备注</B>：<BR>
		<BR>
		<UL>
			<LI>在程序界面中，可以交互式执行命令，还可以查看命令的执行结果。</LI>
			<LI>不带参数执行 CeleScript，默认将会执行此命令，显示程序主界面。</LI>
			<LI>您也可以修改 CeleScript.exe 的资源，把您的.csc 文件脚本（必须是 UNICODE 格式，且最后一个字符必须是空字符）导入到&nbsp; 
			CeleScript RCDATA 资源中，则 CeleScript 默认将执行您的自定义命令。</LI>
		</UL>
		<P><BR>　</LI>
	</UL>
	</LI>
	
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Tips"></A>七、问答</H5>
<OL>
	<LI><B>在 XPE 中，如何使用 CeleScript 作为登录解释引擎？</B><BR>
	<BR>
	我也不知道。</LI>
</OL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="License"></A>八、许可</H5>
<UL>
	<LI><FONT COLOR="#FF0000">本程序及其源代码是可以免费获取的。<BR>
	　</FONT></LI>
	<LI><FONT COLOR="#FF0000">如果您使用或修改了其中任何的源代码，则必须把使用这些源代码的项目以及项目内的所有源代码和文档公开。否则禁止使用本程序源代码的任何部分。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">您可以复制、分发和传播无限制数量的软件产品，但您必须保证每一份复制、分发和传播都必须是完整和真实的，包括所有有关本软件产品的软件、电子文档，版权和商标宣言。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">作者特此申明对本软件产品之使用不提供任何保证，不对任何用户保证本软件产品的适用性，不保证无故障产生；亦不对任何用户使用此软件所遭遇到的任何理论上的或实际上的损失承担 
	责任。</FONT><BR>
	　</LI>
	<LI><FONT COLOR="#FF0000">如果您使用本软件，即表示已经默认接受了此协议。</FONT></LI>
</UL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<H5><A NAME="Donation"></A>九、致谢</H5>
<UL>
	<LI>感谢所有使用本程序的用户。</LI>
</UL>
<P ALIGN="right">[<A HREF="#Catalog">目录</A>]</P>
<P ALIGN="center">Powered by Yonsm<BR>
Tencent QQ: 123018<BR>
MSN: <A HREF="mailto:Yonsm@msn.com">Yonsm@msn.com</A><BR>
电邮: <A HREF="mailto:Yonsm@163.com">Yonsm@163.com</A><BR>
网站: <A HREF="http://www.Yonsm.net/mobile">WWW.Yonsm.NET</A><BR>
版权所有 (C) 2006-2008 <A HREF="http://www.yonsm.net/">Yonsm.NET</A>，保留所有权利<BR>
　</P>

</BODY>

</HTML>
